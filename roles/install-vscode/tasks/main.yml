---
- name: "Check if VS Code extensions directory exists"
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.vscode/extensions"
  register: vscode_extensions_dir

- name: "Get list of installed VS Code extensions"
  ansible.builtin.find:
    paths: "{{ ansible_env.HOME }}/.vscode/extensions"
    patterns: "*"
    file_type: directory
  register: installed_extensions
  when: vscode_extensions_dir.stat.exists

- name: "Check each required extension"
  ansible.builtin.set_fact:
    extension_installed: "{{ (installed_extensions.files | map(attribute='pathname') | map('basename') | list | select('regex', '^' + item + '-.*$') | list | length) > 0 }}"
  loop: "{{ vscode_extensions }}"
  when: vscode_extensions_dir.stat.exists
  register: extension_checks

- name: "Set all_extensions_installed based on checks"
  ansible.builtin.set_fact:
    all_extensions_installed: "{{ extension_checks.results | map(attribute='ansible_facts.extension_installed') | list | all }}"
  when: vscode_extensions_dir.stat.exists and extension_checks is defined

- name: "Debug extension installation status"
  ansible.builtin.debug:
    msg: "VS Code extensions already installed: {{ all_extensions_installed }}"
  when: vscode_extensions_dir.stat.exists

- name: "Set default for all_extensions_installed"
  ansible.builtin.set_fact:
    all_extensions_installed: false
  when: not vscode_extensions_dir.stat.exists

- name: "Include VS Code role when extensions are missing"
  include_role:
    name: gantsign.visual-studio-code
  when: not all_extensions_installed 