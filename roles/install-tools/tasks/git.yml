- name: "Setting /opt ownership"
  ansible.builtin.file:
    path: "/opt"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: "0755"
  become: true

- name: "Create temporary build directory"
  ansible.builtin.tempfile:
    state: directory
  register: build_dir_temp


- name: "Checking for existing repositories"
  block:
    - name: "Check if repo already exists"
      stat:
        path: "{{ item.dest }}/.git"
      register: repo_exists
      delegate_to: localhost
      run_once: false

    - name: "Cloning repositories"
      ansible.builtin.git:
        repo: "https://github.com/{{ item.repo }}"
        dest: "{{ item.dest }}"
        version: "{{ item.version }}"
        update: no
      when: not repo_exists.stat.exists

    - name: "Pulling latest changes"
      ansible.builtin.git:
        repo: "https://github.com/{{ item.repo }}"
        dest: "{{ item.dest }}"
        version: "{{ item.version }}"
        update: yes
      when: repo_exists.stat.exists
  loop: "{{ Repos }}"
  loop_control:
    label: "{{ item.repo }}"


# Cannot `git pull` because of extraction
- name: "Cloning Webshells (temp dir)"
  git:
    repo: "https://github.com/jbarcia/Web-Shells.git"
    dest: "{{ build_dir_temp.path }}/Web-Shells"
    version: master
  become: true
- name: "Installing Laudanum"
  copy:
    src: "{{ build_dir_temp.path }}/Web-Shells/laudanum"
    dest: "/opt/laudanum"
    mode: "0755"
  become: true

# No need to `git pull`
- name: "Cloning RockYou"
  shell:
    cmd: "wget https://github.com/brannondorsey/naive-hashcat/releases/download/data/rockyou.txt -O /opt/rockyou.txt"
  become: true

# Cannot `git pull` because of extraction
- name: "Cloning TreyWB/PenTest repo"
  git:
    repo: "https://github.com/TreyWB/PenTest.git"
    dest: "{{ build_dir_temp.path }}/PenTest"
    version: "main"
  become: true
- name: "Installing TreyWB/PenTest repo"
  copy:
    src: "{{ build_dir_temp.path }}/PenTest/"
    dest: "/opt/"
    mode: "0755"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    remote_src: yes
    force: yes
    exclude:
      - "README.me"


- name: "Copying github release python script"
  copy:
    src: "files/githubdownload.py"
    dest: "{{ build_dir.path }}/githubdownload.py"
    owner: root
    group: root
    mode: 0755
  become: true

# TODO: Add Bloodhound & SharpHound & SharpCollection?

- name: "Downloading Github Releases"
  shell: "{{ build_dir.path }}/githubdownload.py {{ item.repo }} {{ item.regex }} {{ item.location }} {% if item.filename is defined %}{{ item.filename }}{% endif %}"
  loop:
    - { repo: "ropnop/kerbrute", regex: "_linux_amd64", location: "/opt", filename: "kerbrute" }
    - { repo: "carlospolop/PEASS-ng",  regex: "linpeas.sh", location: "/opt/peas" }
    - { repo: "carlospolop/PEASS-ng",  regex: "winPEASx64.exe", location: "/opt/peas" }

- name: "Making binaries executable"
  ansible.builtin.file:
    path: "{{ item.path }}"
    mode: "0755"
  loop:
    - { path: "/opt/peas/linpeas.sh" }
    - { path: "/opt/kerbrute/kerbrute" }


- name: "Cleaning up temp dir"
  ansible.builtin.file:
    path: "{{ build_dir_temp.path }}"
    state: absent
  become: true